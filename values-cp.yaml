ingressController:
  enabled: true
  env:
    publish_service: kong/kong-dp-kong-proxy
    kong_admin_token: kong_admin_password
  
image:
 repository: kong/kong-gateway
 tag: "3.9.0.1"
  
# Mount the secret created earlier
secretVolumes:
 - kong-cluster-cert
  
env:
 # This is a control_plane node
 role: control_plane
 # These certificates are used for control plane / data plane communication
 cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
 cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key
  
 # Database
 # CHANGE THESE VALUES
 database: postgres
 pg_database: kong
 pg_user: kong
 pg_password: demo123
 pg_host: kong-cp-postgresql.kong.svc.cluster.local
 pg_ssl: "on"
  
 # Kong Manager password
 password: kong_admin_password
  
# Enterprise functionality
enterprise:
 enabled: true
 license_secret: kong-enterprise-license
  
# The control plane serves the Admin API
admin:
  enabled: true
  http:
    enabled: true
  tls:
    enabled: false
     
  ingress:
    enabled: true
    hostname: admin.example.com
    path: /
    pathType: Prefix
    ingressClassName: kong
  
# Clustering endpoints are required in hybrid mode
cluster:
 enabled: true
 tls:
   enabled: true
  
clustertelemetry:
 enabled: true
 tls:
   enabled: true
  
# Optional features
manager:
 enabled: true
 type: LoadBalancer
  
# These roles will be served by different Helm releases
proxy:
 enabled: false

postgresql:
   enabled: true
   auth:
     password: demo123